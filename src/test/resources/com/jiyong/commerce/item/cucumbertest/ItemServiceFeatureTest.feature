Feature: 물품 구매


  Background: 다음 카테고리가 있다고 가정한다.
    Given 카테고리 저장하기
      | id | categoryName | upperCategory |
      |    | 식품           |               |
      | 2  | 축산물          | 식품,1          |
      | 3  | 소고기          | 축산물,2 식품,1    |


  Scenario: 사용자가 물품을 구매하면 재고가 줄어들고, 재고가 0이 되면 더 이상 구매 불가. 이후 재고가 충전되면 다시 구매 가능
    Given "사용자1"이 존재
    And "사용자2"이 존재
    And "사용자1"이 "식품""축산물" 에 속하는 "사과" 5 개를 개당 1000.0 원에 등록
      | id | categoryName | upperCategory |
      |    | 식품           |               |
      | 2  | 축산물          | 식품,1          |
      | 3  | 소고기          | 축산물,2 식품,1    |

    And "사용자1"이 "물품A"의 재고 2개 등록
    When "사용자2"가 "물품A" 2개 구매


#  Scenario: 사용자가 물품을 구매하면 재고가 줄어들고, 재고가 0이 되면 더 이상 구매 불가. 이후 재고가 충전되면 다시 구매 가능
#
#    Given "사용자1"이 존재 -> no-op
#    And "사용자2"이 존재 -> no-op
#    And "사용자1"이 "물품A" 등록 -> 일부 구현 가능
#    And "사용자1"이 "물품A"의 재고 "2"개 등록 -> 일부 구현 가능
#    When "사용자2"가 "물품A" "2"개 구매 -> 일부 구현 가능
#    Then "물품A"의 재고는 "0"개 -> 100% 가능
#    And "사용자2"는 "물품A" "2"개 구매함 -> 일부 구현 가능
#    When "사용자2"가 "물품A" "1"개 구매
#    Then 물품A 구매 불가 사유 : 재고 부족
#    When "사용자1"이 "물품A"의 재고 "1"개 등록
#    Then "물품A"의 재고는 "1"개
#    When 사용자2가 물품 A 1개 구매
#    Then "물품A"의 재고는 "0"개
#    And "사용자2"는 "물품A" "3"개 구매함
#
#    Given "사용자1"이 존재
